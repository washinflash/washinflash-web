DROP DATABASE WASHINFLASH;
CREATE DATABASE WASHINFLASH;
USE WASHINFLASH;

CREATE TABLE EMPLOYEE_DETAILS (EMPLOYEE_DETAILS_ID INT NOT NULL AUTO_INCREMENT , EMPLOYEE_NAME VARCHAR(100) NOT NULL , EMPLOYEE_TYPE VARCHAR(20) NOT NULL , MOBILE_NO VARCHAR(20) NOT NULL , EMAIL_ID VARCHAR(255) , ADDRESS VARCHAR(500) NOT NULL , PASSWORD VARCHAR(100) , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (EMPLOYEE_DETAILS_ID) ); 
CREATE TABLE VENDOR_DETAILS (VENDOR_DETAILS_ID INT NOT NULL AUTO_INCREMENT , VENDOR_NAME VARCHAR(100) NOT NULL , VENDOR_TYPE VARCHAR(20) NOT NULL , MOBILE_NO VARCHAR(20) NOT NULL , EMAIL_ID VARCHAR(255) , ADDRESS VARCHAR(500) NOT NULL , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (VENDOR_DETAILS_ID) ); 
CREATE TABLE APPLICATION_PARAM (APP_PARAM_ID INT NOT NULL AUTO_INCREMENT , PARAM_NAME VARCHAR(30) NOT NULL , PARAM_VALUE VARCHAR(500) , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (APP_PARAM_ID) ); 
CREATE TABLE SERVICE_TYPE (SERVICE_TYPE_ID INT NOT NULL AUTO_INCREMENT , SERVICE_TYPE VARCHAR(20) NOT NULL , SERVICE_TYPE_DESC VARCHAR(100) , MIN_ORDER_VALUE INT , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_TYPE_ID) ); 
CREATE TABLE DELIVERY_TYPE (DELIVERY_TYPE_ID INT NOT NULL AUTO_INCREMENT , DELIVERY_TYPE VARCHAR(50) NOT NULL , DELIVERY_TYPE_DESC VARCHAR(100) NOT NULL , TOTAL_BILL_MULTI DOUBLE NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (DELIVERY_TYPE_ID) ); 
CREATE TABLE SERVICE_DELIVERY_MAPPING (SERV_DEL_MAPPING_ID INT NOT NULL AUTO_INCREMENT , SERVICE_TYPE_ID INT , DELIVERY_TYPE_ID INT , DELIVERY_TIME_HOURS INT NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERV_DEL_MAPPING_ID), FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES SERVICE_TYPE(SERVICE_TYPE_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (DELIVERY_TYPE_ID) REFERENCES DELIVERY_TYPE(DELIVERY_TYPE_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE SERVICE_CATEGORY (SERVICE_CAT_ID INT NOT NULL AUTO_INCREMENT , SERVICE_CAT VARCHAR(50) NOT NULL , SERVICE_CAT_DESC VARCHAR(100) , SERVICE_TYPE_ID INT , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_CAT_ID), FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES SERVICE_TYPE(SERVICE_TYPE_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE SERVICE_CITY (SERVICE_CITY_ID INT NOT NULL AUTO_INCREMENT , CITY_CODE VARCHAR(20) NOT NULL , CITY_NAME VARCHAR(100) NOT NULL , STATE VARCHAR(100) NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_CITY_ID) ); 
CREATE TABLE SERVICE_AREA (SERVICE_AREA_ID INT NOT NULL AUTO_INCREMENT , SERVICE_AREA_CODE VARCHAR(30) NOT NULL , SERVICE_AREA_NAME VARCHAR(100) NOT NULL , PIN_CODE INT NOT NULL , SERVICE_CITY_ID INT , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_AREA_ID), FOREIGN KEY (SERVICE_CITY_ID) REFERENCES SERVICE_CITY(SERVICE_CITY_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE SERVICE_TERM_COND (SERVICE_TERM_COND_ID INT NOT NULL AUTO_INCREMENT , SERVICE_TERM_COND VARCHAR(500) NOT NULL , SERVICE_TYPE_ID INT , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_TERM_COND_ID), FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES SERVICE_TYPE(SERVICE_TYPE_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE SERVICE_LIST (SERVICE_LIST_ID INT NOT NULL AUTO_INCREMENT , SERVICE_NAME VARCHAR(200) NOT NULL , SERVICE_DESC VARCHAR(500) , SERVICE_CAT_ID INT , ACTUAL_PRICE FLOAT(6, 2) NOT NULL , EFFECTIVE_PRICE FLOAT(6, 2) NOT NULL , UNIT_DESC VARCHAR(50) NOT NULL , PIC_PATH VARCHAR(100) NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_LIST_ID), FOREIGN KEY (SERVICE_CAT_ID) REFERENCES SERVICE_CATEGORY(SERVICE_CAT_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE USER_DETAILS (USER_DETAILS_ID INT NOT NULL AUTO_INCREMENT , NAME VARCHAR(30) , EMAIL VARCHAR(255) , MOBILE_NO VARCHAR(20) , PASSWORD VARCHAR(200) , MOB_OTP INT , MOB_VERIFIED VARCHAR(1) , REFERRAL_CODE VARCHAR(10) , FORCE_PASS_RESET VARCHAR(1) , USER_TYPE VARCHAR(20) NOT NULL , FACEBOOK_ID VARCHAR(30) , CREATED_ON DATETIME NOT NULL , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (USER_DETAILS_ID) ); 
CREATE TABLE USER_ADDRESS (ADDRESS_ID INT NOT NULL AUTO_INCREMENT , USER_DETAILS_ID INT , NAME VARCHAR(30) NOT NULL , MOBILE_NO VARCHAR(20) NOT NULL , LANDMARK VARCHAR(100) , ADDRESS VARCHAR(200) , PIN_CODE INT NOT NULL , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (ADDRESS_ID), FOREIGN KEY (USER_DETAILS_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE ORDER_DETAILS (ORDER_ID INT NOT NULL AUTO_INCREMENT , USER_DETAILS_ID INT , ADDRESS_ID INT , DELIVERY_TYPE VARCHAR(30) , PICKUP_DATE DATE NOT NULL , PICKUP_TIME VARCHAR(100) NOT NULL , DELIVERY_DATE DATE , DELIVERY_TIME VARCHAR(100) , ORDER_REFERENCE VARCHAR(100) NOT NULL , APPROX_NO_CLOTHES INT , ACTUAL_NO_CLOTHES INT , COUPON_CODE VARCHAR(20) , TOTAL_PRICE FLOAT(6, 2) , TOTAL_PRICE_MULTIPLIER FLOAT(6, 2) , MINIMUM_ORDER_VALUE INT , PICKED_UP_BY INT , DELIVERED_BY INT , DONATE_ONLY VARCHAR(1) , SPECIAL_INSTRUCTION VARCHAR(1000) , CREATED_ON DATETIME NOT NULL , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (ORDER_ID), FOREIGN KEY (USER_DETAILS_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (ADDRESS_ID) REFERENCES USER_ADDRESS(ADDRESS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (PICKED_UP_BY) REFERENCES EMPLOYEE_DETAILS(EMPLOYEE_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (DELIVERED_BY) REFERENCES EMPLOYEE_DETAILS(EMPLOYEE_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE ORDER_HISTORY (ORDER_HISTORY_ID INT NOT NULL AUTO_INCREMENT , ORDER_ID INT , UPDATED_ON DATETIME NOT NULL , COMMENTS VARCHAR(500) , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (ORDER_HISTORY_ID), FOREIGN KEY (ORDER_ID) REFERENCES ORDER_DETAILS(ORDER_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE APP_REVIEW (APP_REVIEW_ID INT NOT NULL AUTO_INCREMENT , USER_DETAILS_ID INT , RATING INT NOT NULL , REVIEW VARCHAR(500) , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (APP_REVIEW_ID), FOREIGN KEY (USER_DETAILS_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE SERVICE_CLOSE_DAYS (SERVICE_CLOSE_DAYS_ID INT NOT NULL AUTO_INCREMENT , CLOSE_ON DATE NOT NULL , REASON VARCHAR(100) , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (SERVICE_CLOSE_DAYS_ID) ); 
CREATE TABLE APPLICATION_PIC (APP_PIC_ID INT NOT NULL AUTO_INCREMENT , PIC_PATH VARCHAR(100) NOT NULL , PIC_TYPE VARCHAR(20) NOT NULL , PIC_TITLE VARCHAR(200) , PIC_DETAILS VARCHAR(200) , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (APP_PIC_ID) ); 
CREATE TABLE USER_SESSION (USER_SESSION_ID INT NOT NULL AUTO_INCREMENT , USER_DETAILS_ID INT , SESSION_TOKEN VARCHAR(20) NOT NULL , LOGGED_ON_TIME DATETIME NOT NULL , LOGGED_OUT_TIME DATETIME , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (USER_SESSION_ID), FOREIGN KEY (USER_DETAILS_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE ORDER_SERVICE_MAPPING (ORDER_SERVICE_MAPPING_ID INT NOT NULL AUTO_INCREMENT , ORDER_ID INT , SERVICE_TYPE_ID INT , ASSIGNED_VENDOR_ID INT , ASSIGNED_VENDOR_ON DATETIME , ORDER_STATUS VARCHAR(20) , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (ORDER_SERVICE_MAPPING_ID), FOREIGN KEY (ORDER_ID) REFERENCES ORDER_DETAILS(ORDER_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES SERVICE_TYPE(SERVICE_TYPE_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (ASSIGNED_VENDOR_ID) REFERENCES VENDOR_DETAILS(VENDOR_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE OFFER_DETAILS (OFFER_DETAILS_ID INT NOT NULL AUTO_INCREMENT , OFFER_CODE VARCHAR(20) , OFFER_TYPE VARCHAR(20) NOT NULL , OFFER_DESC VARCHAR(200) NOT NULL , START_DATE DATE NOT NULL , END_DATE DATE NOT NULL , OFFER_AMOUNT INT , OFFER_PERCENTAGE INT , MIN_BOOKING_AMT INT , MAX_DISCOUNT INT , APP_PIC_ID INT , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (OFFER_DETAILS_ID), FOREIGN KEY (APP_PIC_ID) REFERENCES APPLICATION_PIC(APP_PIC_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE REFERRAL_DETAILS (REFERRAL_DETAILS_ID INT NOT NULL AUTO_INCREMENT , USER_DETAILS_ID INT , OFFER_DETAILS_ID INT , VALID_TILL DATE NOT NULL , CANDIDATE_USER_ID INT , REFERRER_USER_ID INT , REDEEM_STATUS VARCHAR(20) , UPDATED_ON DATETIME NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (REFERRAL_DETAILS_ID), FOREIGN KEY (USER_DETAILS_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (OFFER_DETAILS_ID) REFERENCES OFFER_DETAILS(OFFER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (CANDIDATE_USER_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (REFERRER_USER_ID) REFERENCES USER_DETAILS(USER_DETAILS_ID) ON DELETE SET NULL ON UPDATE CASCADE ); 
CREATE TABLE FAQ_DETAILS (FAQ_DETAILS_ID INT NOT NULL AUTO_INCREMENT , FAQ_QUESTION VARCHAR(100) NOT NULL , FAQ_ANSWER VARCHAR(1000) NOT NULL , STATUS VARCHAR(20) NOT NULL , PRIMARY KEY (FAQ_DETAILS_ID) ); 
